// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders empty list of countries correctly 1`] = `[Function]`;

exports[`renders filled list of countries correctly 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  data={
    [
      {
        "capital": [
          "Capital1",
        ],
        "currencies": {
          "C1": {
            "name": "currenycy1",
            "symbol": "$",
          },
        },
        "flag": "ðŸ‡§ðŸ‡·",
        "name": {
          "common": "Country1",
          "official": "Official1",
        },
      },
      {
        "capital": [
          "Capital2",
        ],
        "currencies": {
          "C2": {
            "name": "currenycy2",
            "symbol": "$",
          },
        },
        "flag": "ðŸ‡ºðŸ‡¸",
        "name": {
          "common": "Country2",
          "official": "Official2",
        },
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "padding": 10,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              {
                "backgroundColor": "#fff",
                "borderRadius": 16,
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "padding": 16,
              }
            }
          >
            <Text
              style={
                {
                  "flexWrap": "wrap",
                  "fontSize": 30,
                  "fontWeight": "bold",
                  "maxWidth": "80%",
                }
              }
            >
              Country1
            </Text>
            <Text
              style={
                {
                  "fontSize": 30,
                }
              }
            >
              ðŸ‡§ðŸ‡·
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          {
            "padding": 10,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              {
                "backgroundColor": "#fff",
                "borderRadius": 16,
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "padding": 16,
              }
            }
          >
            <Text
              style={
                {
                  "flexWrap": "wrap",
                  "fontSize": 30,
                  "fontWeight": "bold",
                  "maxWidth": "80%",
                }
              }
            >
              Country2
            </Text>
            <Text
              style={
                {
                  "fontSize": 30,
                }
              }
            >
              ðŸ‡ºðŸ‡¸
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
